---
title: "Générer un rapport d'analyses"
vignette: >
  %\VignetteIndexEntry{Générer un rapport d'analyses}
  %\VignetteEngine{quarto::html}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```



### Chargement de la librairie

```{r setup}
library(firstlibFlorian)
```



### Introduction

Cette vignette présente l'utilisation des fonctions `summary.commune`, `summary.departement` et `generer_rapport` pour créer des rapports détaillés sur les communes et départements. Ces fonctions permettent d'extraire et de résumer des informations clés, telles que le nom de la commune, le nombre d'élus, la répartition des âges des élus, ainsi que l'identification de l'élu(e) le/la plus âgé(e) et le/la plus jeune. 

De plus, elles fournissent une vue d'ensemble des données démographiques au niveau du département, y compris la distribution des âges des élus dans les communes les plus jeunes et les plus âgées. 

Enfin, la fonction `generer_rapport` génère un rapport Quarto complet, puis le déplace automatiquement vers le chemin de destination choisi par l'utilisateur.



### Utilisation de la fonction `summary.commune`

##### Description
Cette fonction affiche un résumé des informations d'une commune,notamment le nom de la commune, le nombre d'élus, la distribution des âgesdes élus, ainsi que le nom et l'âge de l'élu(e) le/la plus âgé(e).


##### Paramètres
**df** Un DataFrame contenant des informations sur les élus d'une commune,incluant les colonnes `Libellé de la commune` et `Date de naissance`.  
**...** Arguments supplémentaires, non utilisés dans cette méthode.


##### Retour
Aucun retour explicite. La fonction affiche dans la console :  
- Le nom de la commune,  
- Le nombre d’élus,  
- La distribution des âges des élus sous forme de tibble,  
- Le nom, le prénom, la date de naissance et l'âge de l’élu(e) le/la plus âgé(e), sous forme de tibble.


##### Exemples d'utilisation

```{r}
# Données (villes)

df_Nantes <- df_gers_loire_atlantique |>
  dplyr::filter(`Libellé de la commune` == "Nantes")

df_Aignan <- df_gers_loire_atlantique |>
  dplyr::filter(`Libellé de la commune` == "Aignan")


# DataFrames appartenant à la classe commune

df_Nantes <- structure(df_Nantes, class = c("commune", class(df_Nantes)))

df_Aignan <- structure(df_Aignan, class = c("commune", class(df_Aignan)))


# Utilisation de la fonction

summary(df_Nantes)

summary(df_Aignan)
```



### Utilisation de la fonction `summary.departement`

##### Description

Cette fonction affiche un résumé des informations d'un département,notamment le nom du département, le nombre de communes, le nombre d'élus,la distribution des âges des élus, ainsi que le nom et l'âge de l'élu(e) le/la plus âgé(e) et de l'élu(e) le/la plus jeune. Elle affiche également les communes ayant la moyenne d’âge la plus faible et la plus élevée, avec la distribution des âges des élus pour ces communes.


##### Paramètres

**df** Un DataFrame contenant des informations sur les élus, incluant les colonnes `Libellé du département`, `Code de la commune`, et les informations nécessaires pour calculer la distribution des âges, trouver l’élu(e) le/la plus âgé(e) et le/la plus jeune, ainsi que la moyenne d’âge par commune.  
**...** Arguments supplémentaires, non utilisés dans cette méthode.


##### Retour

Aucun retour explicite. La fonction affiche dans la console :  
- Le nom du département,  
- Le nombre de communes dans le département,  
- Le nombre d’élus dans le département,  
- La distribution des âges des élus sous forme de tibble,  
- Le nom, le prénom, la date de naissance et l'âge de l’élu(e) le/la plus âgé(e), ainsi que celui/ceux de l’élu(e) le/la plus jeune, sous forme de tibble,  
- Les noms des communes avec la moyenne d’âge la plus faible et la plus élevée, ainsi que la distribution des âges des élus pour ces communes.


##### Exemples d'utilisation

```{r}
# Données (départements)

df_Loire_Atlantique <- df_gers_loire_atlantique |>
  dplyr::filter(`Libellé du département` == "Loire-Atlantique")

df_Gers <- df_gers_loire_atlantique |>
  dplyr::filter(`Libellé du département` == "Gers")


# DataFrames appartenant à la classe departement

df_Loire_Atlantique <- structure(df_Loire_Atlantique, class = c("departement", class(df_Loire_Atlantique)))

df_Gers <- structure(df_Gers, class = c("df_Gers", class(df_Gers)))


# Utilisation de la fonction

summary(df_Loire_Atlantique)

summary(df_Gers)
```



### Exemple d'utilisation de la fonction `generer_rapport` :

##### Description

Cette fonction génère un rapport Quarto en utilisant les paramètres `commune` et `departement` spécifiés.  
Après la génération, le fichier `rapport.html` est déplacé vers le chemin de destination spécifié par l'utilisateur.


##### Paramètres

**commune** Un entier représentant le numéro de la commune à inclure dans le rapport.  
**departement** Un entier représentant le numéro du département à inclure dans le rapport.  
**output** Une chaîne de caractères représentant le chemin de destination où le fichier rapport doit être déplacé. Le fichier généré sera déplacé vers ce chemin sous le nom de `rapport.html`.


##### Retour

Aucun retour explicite. Le fichier `rapport.html` est généré et déplacé vers le chemin spécifié.


##### Exemples d'utilisation

```{r}
# Utilisation de la fonction pour générer un rapport pour la commune de Nantes (44109) et le département de Loire-Atlantique (44)

# generer_rapport(44109, 44, "<votre chemin>/<nom du fichier>.html")
```



### Conclusion

Grâce à l'utilisation des fonctions `summary.commune`, `summary.departement` et `generer_rapport`, il est désormais possible de générer des rapports détaillés sur les communes et départements. Ces outils permettent une analyse approfondie des données démographiques des élus, en offrant une vue d'ensemble claire et concise des informations clés, telles que la répartition des âges et l'identification des élus les plus âgés et les plus jeunes. 

La fonction `generer_rapport` simplifie le processus de génération et de déplacement des rapports Quarto, facilitant ainsi leur diffusion et leur utilisation. En combinant ces fonctions, vous pouvez obtenir des rapports bien structurés et informatifs qui vous aident à mieux comprendre les tendances démographiques au sein des communes et départements.
